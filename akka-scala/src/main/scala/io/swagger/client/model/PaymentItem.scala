/**
 * FSS Financial Services
 * This service allows to submit payments, purchases and sales Items to SBBs financial system FSS based on SAP Hybris Billing. Depending on the agreed functionalities the Items can be priced, validated, enriched, posted in the subledger and reported. For more information please check the FSS website or contact the team.
 *
 * OpenAPI spec version: 1.0.1
 * Contact: dl_fss_all@sbb.ch
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class PaymentItem (
  /* This is an unique ID for each payment made in the distributionchannels */
  paymentId: Double,
  /* Type of payment transaction - PAYMENT, REFUND or CANCEL. This attribute is managing the minus/plus sign for the price in PaymentItem. REFUND or CANCEL result in minus. */
  transactionType: PaymentItemEnums.TransactionType,
  /* The final Status of the payment transaction. Successfull payment = settled, Final not succesfull even after retry = failed, Final after status failed = settled_late */
  transactionStatus: PaymentItemEnums.TransactionStatus,
  /* Paymenttype code with max 3 characters - similar to the SBB terminology in ZVS Payment. For the invoicing 'FSI' has to be used, InvoiceInformations have to be delivered and Customers master data has to be managed in SAP Brim. Valid values: VIS = VISA , MC = Mastercard, DIN = Diners, AMX = American Express, JCB = JCB International, UAP = Airplus, PCD = Postfinance Card, RCC = Reka Check Card, MAE = Maestro, TWI = TWINT, BYU = Byjuno, PRO = Promotion, BAR = Cash, FSI = Invoice in SAP Brim */
  paymentMethod: String,
  transactionTime: TransactionTime,
  /* This is the payment amount credit/debited to the customer for this paymentType - Minus amounts are not allowed, this is managed by the transactionType */
  price: Price,
  onlineReference: Option[OnlineReference] = None,
  terminalReference: Option[TerminalReference] = None,
  couponReference: Option[CouponReference] = None
) extends ApiModel

object PaymentItemEnums {

  type TransactionType = TransactionType.Value
  type TransactionStatus = TransactionStatus.Value
  object TransactionType extends Enumeration {
    val PAYMENT = Value("PAYMENT")
    val REFUND = Value("REFUND")
    val CANCEL = Value("CANCEL")
  }

  object TransactionStatus extends Enumeration {
    val Settled = Value("settled")
    val Failed = Value("failed")
    val SettledLate = Value("settled_late")
  }

}

